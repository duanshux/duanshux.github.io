import{_ as o,c as a,o as p,ai as t}from"./chunks/framework.BRpz_i7m.js";const u=JSON.parse('{"title":"博客搭建方案选择的心路历程","description":"","frontmatter":{"title":"博客搭建方案选择的心路历程","prev":false,"next":{"text":"使用内网穿透给家用网络套上公网IP","link":"/blog/posts/frp-ip"}},"headers":[],"relativePath":"blog/posts/blog-system-choice/index.md","filePath":"blog/posts/blog-system-choice/index.md"}'),h={name:"blog/posts/blog-system-choice/index.md"};function r(s,e,i,d,n,l){return p(),a("div",null,e[0]||(e[0]=[t('<h1 id="博客搭建方案选择的心路历程" tabindex="-1">博客搭建方案选择的心路历程 <a class="header-anchor" href="#博客搭建方案选择的心路历程" aria-label="Permalink to &quot;博客搭建方案选择的心路历程&quot;">​</a></h1><p>在折腾一圈hexo，wordpress，typecho，hugo后，我选择用回hexo。本篇将叙述一下作此选择的理由以及介绍一下目前使用的方案。</p><h2 id="动态还是静态" tabindex="-1">动态还是静态 <a class="header-anchor" href="#动态还是静态" aria-label="Permalink to &quot;动态还是静态&quot;">​</a></h2><p>动态博客尝试了wordpress和typecho。</p><p>两者都使用了一段时间后，在wordpress和typecho之间，我最后选择了typecho，原因有两点：第一，我更喜欢使用markdown进行创作，第二，typecho有极佳的主题handsome，主题自带的时光机功能更是深得我心。</p><p>动态博客的优点是有后台，有后台意味着可以方便的对博客进行管理，可以更好的掌握博客的数据，同时可以设置文章加密，直接网页打开后台即可进行编辑发布。</p><p>动态博客的缺点是需要有自己的云服务器。当然也可以使用内网穿透，但是稳定性和访问速度欠佳。</p><p>我在不短的时间里使用typecho作为我的博客系统，而最终如你所见，我放弃了它，原因如下：</p><p>第一，后台界面不美观。typecho的前端主题handsome固然很完美，但后台管理界面属实够呛，我也尝试过一下后台美化的插件，但都不尽人意。</p><p>第二，服务器是一笔成本。如果想要有最好的使用体验，无疑需要国内的服务器，而国内的云服务商大多把老用户当狗，续租价格让人难以接受，同时需要备案。而如果选择国外的VPS，稳定性难以保证，同时大部分低价VPS需要信用卡支付，而我并没有办信用卡。而如果使用自己的小主机进行内网穿透，稳定性同样难以保证，而且访问速度也堪忧。这三种方案都是需要钱的，且第一种方案耗资巨大（对一个没多少访问量的博客而言），第二第三种方案使用体验极差。</p><p>第三，编辑体验极差。在排除了使用国内的云服务器这一解决方案后，我选择了使用内网穿透，而由于其稳定性堪忧（事实上我尝试过两家内网穿透的服务提供商，并都使用了一段时间，但都体验很差），访问速度堪忧，在这种情况下，直接打开网页在后台进行创作无疑也是体验极差，更遑论本身网页的markdown编辑器就不如本地编辑器好用。</p><p>第四，handsome很好，但是腻了。在使用了一段时间之后，初见的惊艳消退，而我又更喜欢简洁的风格，handsome对我而言就变成了一个食之无味，弃之可惜的鸡肋主题。</p><p>至此，让我继续使用typecho的唯一理由就只剩下了handsome的时光机功能，可以让我用手机直接在博客上发动态。</p><p>静态博客的优点是不需要服务器（当然放在服务器上也可以），可以直接托管在github或者cloudflare上，同时自带了https。</p><p>静态博客的缺点是没有后台，无法浏览器打开网页直接进行编辑创作，只能伪加密，加密安全系数极低。</p><p>最终，我告别了动态博客。</p><h2 id="hexo还是hugo" tabindex="-1">Hexo还是Hugo <a class="header-anchor" href="#hexo还是hugo" aria-label="Permalink to &quot;Hexo还是Hugo&quot;">​</a></h2><p>原本使用的hexo，但是Nodejs的一堆组件库带来的各种奇奇怪怪的小问题和缓慢的编译速度以及艰难的备份恢复和难以使用多台设备操作（起码每台设备都得配置安装一遍），让我一直很难接受。这也是我一度转为使用动态博客的原因。</p><p>所以后来尝试了hugo，不得不说，生成网页的速度很快，稳定且快，令人舒适。</p><p>但是最终放弃了hugo，原因有三：第一，hugo的shortcode虽然很好，但破坏了markdown的兼容性，对我而言，我需要取舍，我是要这个看着很好用的功能还是要保持纯粹的markdown，我很讨厌这样去做抉择，这让我在创作时多了一些或是心理或是思考的负担。第二，hugo的中文资料过少，搜索解决问题所需要花费的时间成本陡增。第三，我更喜欢Hexo的Fluid主题，在hugo中我并没有找到让我很喜欢的主题，而如果自己魔改，如第二条所言，所需要花费的时间成本过高。</p><p>最终，我回到了Hexo。</p><h2 id="闲言碎语" tabindex="-1">闲言碎语 <a class="header-anchor" href="#闲言碎语" aria-label="Permalink to &quot;闲言碎语&quot;">​</a></h2><p>众所周知，github由于各种污染，导致国内访问速度堪忧，因此我最终选择了将网站托管在cloudflare上，和github pages的使用并没有什么区别，只需要在cloudflare上绑定对应的github仓库就行。目前看来访问体验比托管在github上稍好一点。</p><p>hexo直接在网页上进行编辑有一种解决思路是使用github action或类似的服务，实际上cloudflare也可以，但是直接打开github进行编辑的编辑体验我觉得并不好，所以并没有选择这种操作方法。</p><p>还有一种解决思路是在服务器上编写博客，电脑的VSCode通过ssh远程理解至服务器编写，但还是老生常谈的问题，即内网穿透的稳定性。同时，这种使用方法下如何优雅的进行图片粘贴也是个问题，目前没找到好的解决方法。</p><p><strong>2023-09-20更新</strong></p><p>VSCode插件markdown image或许可以解决远程服务器的图片粘贴问题。</p><p>从github转到gitlab可以有效提高国内网络环境下的使用体验。</p>',28)]))}const g=o(h,[["render",r]]);export{u as __pageData,g as default};
